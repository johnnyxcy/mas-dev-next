{
    "[cpp]": {
        "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
    },
    "[json, jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[python]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        },
        "editor.defaultFormatter": "ms-python.black-formatter"
    },
    "autoDocstring.docstringFormat": "google",
    "black-formatter.args": ["--config", "${workspaceFolder}/python/pyproject.toml"],
    "clangd.arguments": [
        // "--query-driver=C:/ProgramData/Development/mingw64/bin/g++",
        // 支持读取 .clangd 文件
        "--enable-config",
        // clang-tidy
        "--clang-tidy",
        // 同时开启的任务数量
        "-j=12",
        // 在后台自动分析文件（基于complie_commands)
        "--background-index",
        // 生成至根节点的 build 目录
        "--compile-commands-dir=build",
        // 不要默认自动导入头文件
        "--header-insertion=never",
        // Prepend a circular dot or space before the completion label
        "--header-insertion-decorators",
        // 更详细的补全内容
        "--completion-style=detailed"
    ],
    "cmake.configureArgs": ["-DMAS_SKIP_PYD=ON", "-DMAS_SKIP_TESTS=OFF"],
    "cmake.preferredGenerators": ["Ninja"],
    "cSpell.words": [
        "acks",
        "advan",
        "Alag",
        "anova",
        "arange",
        "ARTIFACTSTAGINGDIRECTORY",
        "asar",
        "asarray",
        "astype",
        "autorun",
        "BFGS",
        "bivariate",
        "bobyqa",
        "burnin",
        "burunin",
        "chol",
        "Cholmod",
        "chunksize",
        "cinccino",
        "ciwres",
        "ciwresi",
        "cmap",
        "Cmax",
        "coalescer",
        "coep",
        "colwise",
        "Covariate",
        "covariates",
        "crobat",
        "cwise",
        "cwres",
        "cwresi",
        "darkgreen",
        "dataframe",
        "dfdx",
        "Dispatchable",
        "dropna",
        "dtype",
        "dtypes",
        "eigen",
        "EMAX",
        "endregion",
        "eventkits",
        "extpath",
        "fillna",
        "finfo",
        "FOCE",
        "focei",
        "ftol",
        "getitem",
        "globstar",
        "gmean",
        "gstd",
        "Haikuo",
        "handsontable",
        "icns",
        "IIPC",
        "iloc",
        "imax",
        "immer",
        "inmemory",
        "inplace",
        "inversify",
        "ipred",
        "ipynb",
        "isort",
        "iwres",
        "kaplan",
        "khatri",
        "kron",
        "kwargs",
        "LBFGS",
        "levelname",
        "levelno",
        "libebt",
        "linalg",
        "lmax",
        "lmin",
        "logdet",
        "loglike",
        "logpdf",
        "lsmeans",
        "lsmodel",
        "luojieren",
        "masmod",
        "maspd",
        "maspectra",
        "masproj",
        "maspy",
        "matplotlib",
        "maxiter",
        "mcmc",
        "midd",
        "middlewares",
        "millis",
        "mobi",
        "multiindex",
        "multimd",
        "mypy",
        "ndarray",
        "Nelder",
        "newuoa",
        "Nocedal",
        "noctowl",
        "nonmem",
        "nsis",
        "numpy",
        "optim",
        "overridable",
        "pandoc",
        "phanpy",
        "plotly",
        "posthoc",
        "proto",
        "protobuf",
        "protoc",
        "protolint",
        "pybind",
        "pyplot",
        "pyright",
        "pytest",
        "qform",
        "qnorm",
        "reml",
        "repr",
        "rosenbrock",
        "rowwise",
        "rsabe",
        "rsquared",
        "RTRT",
        "saem",
        "SAEMSE",
        "Satterthwaite",
        "scikit",
        "scipy",
        "sourcedir",
        "SPSS",
        "startable",
        "statifies",
        "stdtr",
        "streamio",
        "STREQ",
        "struct",
        "sympy",
        "symvar",
        "testcase",
        "togepy",
        "tparam",
        "tril",
        "TRTR",
        "unack",
        "unshift",
        "userdata",
        "varnames",
        "viridis",
        "webviews",
        "Wres",
        "xtol",
        "xuchongyi",
        "xval",
        "yaoze",
        "yapf",
        "yujiesen",
        "zapsmall",
        "zhenghan"
    ],
    "files.associations": {
        "*.spec": "python",
        ".coveragerc": "plaintext",
        "*.json5": "jsonc"
    },
    "jupyter.notebookFileRoot": "${workspaceFolder}",
    "json.schemas": [
        {
            "fileMatch": ["/*electron-builder.json5", "/*electron-builder.json"],
            "url": "https://json.schemastore.org/electron-builder"
        }
    ],
    "material-icon-theme.files.associations": {
        "*.eslint.js": "eslint"
    },
    "material-icon-theme.folders.associations": {
        "runtime": "connection",
        "c++": "project",
        ".cmake": "tools",
        ".debug": "debug",
        ".scripts": "scripts"
    },
    "psi-header.changes-tracking": {
        "autoHeader": "manualSave",
        "include": ["python", "javascript", "javascriptreact", "typescript", "typescriptreact", "cpp"],
        "isActive": true,
        "modAuthor": "Modified By:",
        "modDate": "Last Modified:",
        "replace": ["File:", "Copyright"]
    },
    // TODO: 将这个添加到 User Settings.json
    // "psi-header.variables": [
    //     ["author", "许翀轶"],
    //     ["authoremail", "chongyi.xu@drugchina.net"]
    // ],
    "psi-header.config": {
        "company": "Maspectra Dev Team",
        "forceToTop": true
    },
    "psi-header.lang-config": [
        {
            "beforeHeader": ["# _*_ coding: utf-8 _*_"],
            "begin": "############################################################",
            "end": "############################################################",
            "language": "python",
            "lineLength": 119,
            "prefix": "# ",
            "rootDirFileName": "pyproject.toml"
        }
    ],
    "psi-header.templates": [
        {
            "language": "*",
            "template": [
                "File: <<projectname>><<filerelativepath>>",
                "",
                "Author: <<author>> <<<authoremail>>>",
                "",
                "File Created: <<filecreated('MM/DD/YYYY hh:mm a')>>",
                "",
                "Last Modified: <<dateformat('MM/DD/YYYY hh:mm a')>>",
                "",
                "Modified By: <<author>> <<<authoremail>>>",
                "",
                "Copyright (c) <<yeartoyear(fc, now)>> <<company>>"
            ]
        }
    ],
    "python.analysis.autoImportCompletions": false,
    "python.analysis.completeFunctionParens": false,
    "python.analysis.typeCheckingMode": "strict",
    "python.envFile": "${workspaceFolder}/.env",
    "python.languageServer": "Pylance",
    "python.testing.cwd": "${workspaceFolder}",
    "python.testing.pytestArgs": ["-s"],
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.terminal.activateEnvInCurrentTerminal": true,
    "python.terminal.activateEnvironment": true,
    "search.exclude": {
        "**/node_modules": true,
        "build": true,
        "mas/apps/ebt/build": true,
        "mas/apps/ebt/dist": true,
        "mas/apps/maspectra/release/build": true
    },
    "task.allowAutomaticTasks": "on",
    "testMate.cpp.debug.configTemplate": {
        "args": "${argsArray}",
        "cwd": "${cwd}",
        "env": "${envObj}",
        "initCommands": ["command source ${workspaceRoot}/c++/.lldbinit"],
        "program": "${exec}",
        "sourceFileMap": "${sourceFileMapObj}",
        "terminal": "integrated",
        "type": "lldb"
    },
    "testMate.cpp.log.logpanel": true,
    "testMate.cpp.test.advancedExecutables": [
        {
            "pattern": "c++/build/**/*test*",
            "runTask": {
                "before": ["[CMake]build-all"]
            }
        }
    ],
    "testMate.cpp.test.workingDirectory": "${workspaceFolder}",
    "typescript.tsdk": "node_modules/typescript/lib",
    "typescript.tsserver.maxTsServerMemory": 4096,
    "yaml.customTags": ["!reference sequence"],
    "nxConsole.enableGenerateFromContextMenu": false,
    "nxConsole.enableGeneratorFilters": false
}
